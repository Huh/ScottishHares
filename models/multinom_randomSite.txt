#  Basic multinomial describing how white the population is by time
#random effects on camera
#no fixed effects

model{

  for(i in 1:(nbins - 1)){
    alpha[i] ~ dnorm(0, 0.001)
  }

  for(i in 1:(nbins - 1)){
    beta[i] ~ dnorm(0, 0.001)
  }

  for(i in 1:4){
    tau_cam[i] ~ dunif(0, 100)
    sig_cam[i] <- 1/sqrt(tau_cam[i])
    for(c in 1:ncam){
      cam_eff[i, c] ~ dnorm(0, tau_cam[i])
    }
  }

  for(c in 1:ncam){
    for(d in 1:ndays){
      log(p_exp[1,c,d]) <- alpha[1] +
        beta[1] * d +
        cam_eff[1,c]

      log(p_exp[2,c,d]) <- alpha[2] +
        beta[2] * d +
        cam_eff[2,c]

      log(p_exp[3,c,d]) <- alpha[3] +
        beta[3] * d +
        cam_eff[3,c]

      log(p_exp[4,c,d]) <- alpha[4] +
        beta[4] * d +
        cam_eff[4,c]

      log(p_exp[5,c,d]) <- 0

      p_sum[c,d] <- sum(p_exp[,c,d])

      p_rand[1,c,d] <- p_exp[1,c,d]/p_sum[c,d]
      p_rand[2,c,d] <- p_exp[2,c,d]/p_sum[c,d]
      p_rand[3,c,d] <- p_exp[3,c,d]/p_sum[c,d]
      p_rand[4,c,d] <- p_exp[4,c,d]/p_sum[c,d]
      p_rand[5,c,d] <- p_exp[5,c,d]/p_sum[c,d]
    }
  }

  for(i in 1:nobs){
    y[i] ~ dcat(p_rand[,cam[i],day[i]])
  }

  #  Derived to strip off random camera effect
  for(d in 1:ndays){
    log(pp_exp[1,d]) <- alpha[1] +
      beta[1] * d
    log(pp_exp[2,d]) <- alpha[2] +
      beta[2] * d
    log(pp_exp[3,d]) <- alpha[3] +
      beta[3] * d
    log(pp_exp[4,d]) <- alpha[4] +
      beta[4] * d
    log(pp_exp[5,d]) <- 0

    pp_sum[d] <- sum(pp_exp[,d])

    pp[1,d] <- pp_exp[1,d]/pp_sum[d]
    pp[2,d] <- pp_exp[2,d]/pp_sum[d]
    pp[3,d] <- pp_exp[3,d]/pp_sum[d]
    pp[4,d] <- pp_exp[4,d]/pp_sum[d]
    pp[5,d] <- pp_exp[5,d]/pp_sum[d]
  }
}
